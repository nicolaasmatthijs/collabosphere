/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

module.exports = function(client) {
  client.lti = {};

  /**
   * Get the cartridge for the Asset Library
   *
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.assetLibraryCartridge = function(callback) {
    client.request('/lti/assetlibrary.xml', 'GET', null, null, callback);
  };

  /**
   * Launch the Asset Library
   *
   * @param  {Object}         data                            The data to launch the asset library
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.assetLibraryLaunch = function(data, callback) {
    client.request('/lti/assetlibrary', 'POST', data, null, callback);
  };

  /**
   * Get the cartridge for the Engagement Index
   *
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.engagementIndexCartridge = function(callback) {
    client.request('/lti/engagementindex.xml', 'GET', null, null, callback);
  };

  /**
   * Launch the Engagement Index
   *
   * @param  {Object}         data                            The data to launch the engagement index
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.engagementIndexLaunch = function(data, callback) {
    client.request('/lti/engagementindex', 'POST', data, null, callback);
  };

  /**
   * Get the cartridge for the Whiteboards
   *
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.whiteboardsCartridge = function(callback) {
    client.request('/lti/whiteboards.xml', 'GET', null, null, callback);
  };

  /**
   * Launch the Whiteboards
   *
   * @param  {Object}         data                            The data to launch the whiteboards
   * @param  {Function}       callback                        Standard callback function
   * @param  {Object}         callback.err                    An error that occurred, if any
   * @param  {Object}         callback.body                   The JSON response from the REST API
   * @param  {Response}       callback.response               The response object as returned by requestjs
   * @see col-lti/lib/rest.js for more information
   */
  client.lti.whiteboardsLaunch = function(data, callback) {
    client.request('/lti/whiteboards', 'POST', data, null, callback);
  };
};
