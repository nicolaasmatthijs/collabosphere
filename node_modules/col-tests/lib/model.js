/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var MockedRequest = module.exports.MockedRequest = function(method, path, statusCode, response, handler, isValid) {
  this.method = method;
  this.path = path;
  this.statusCode = statusCode;
  this.response = response;
  this.customHandler = handler;
  this.customIsValidChecker = isValid;
};

MockedRequest.prototype.isValid = function(req) {
  // Assert some basic properties of the HTTP request
  assert.strictEqual(req.method, this.method);
  assert.strictEqual(req.path, this.path);

  // Delegate any further validation to the custom checker
  if (this.customIsValidChecker) {
    this.customIsValidChecker(req);
  }
};

MockedRequest.prototype.handle = function(req, res) {
  if (this.customHandler) {
    return this.customHandler(req, res);
  }

  // The default handler is to return a status code and response
  res.status(this.statusCode).send(this.response);
};
