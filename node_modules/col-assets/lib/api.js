/**
 * Copyright 2015 UC Berkeley (UCB) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Joi = require('joi');

var DB = require('col-core/lib/db');
var log = require('col-core/lib/logger')('col-assets');

/**
 * Create a new link asset
 *
 * @param  {Context}        ctx                             Standard context containing the current user and the current course
 * @param  {String}         title                           The title of the link
 * @param  {String}         url                             The url of the link
 * @param  {Object}         [opts]                          A set of optional parameters
 * @param  {String}         [opts.description]              The description of the link
 * @param  {String}         [opts.source]                   The source of the link
 * @param  {Function}       callback                        Standard callback function
 * @param  {Object}         callback.err                    An error that occurred, if any
 * @param  {Asset}          callback.asset                  The created link asset
 */
var createLink = module.exports.createLink = function(ctx, title, url, opts, callback) {
  // Default the title to the provided url
  title = title || url;

  // Default the optional values
  opts = opts || {};

  // Parameter validation
  var validationSchema = Joi.object().keys({
    'title': Joi.string().required(),
    'url': Joi.string().required(),
    'opts': Joi.object().keys({
      'description': Joi.string().optional(),
      'source': Joi.string().optional()
    })
  });

  var validationResult = Joi.validate({
    'title': title,
    'url': url,
    'opts': opts
  }, validationSchema);

  if (validationResult.error) {
    return callback({'code': 400, 'msg': result.error.details[0].message});
  }

  var asset = {
    'CourseId': ctx.course.id,
    'UserId': ctx.user.id,
    'type': 'link',
    'title': title,
    'url': url,
    'description': opts.description,
    'source': opts.source
  };

  DB.Asset.create(asset).complete(function(err, asset) {
    if (err) {
      log.error({'err': err}, 'Failed to create a new link asset');
      return callback({'code': 500, 'msg': err.message});
    }

    return callback(null, asset);
  });
};
